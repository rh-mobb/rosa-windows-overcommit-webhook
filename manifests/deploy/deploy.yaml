# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: windows-overcommit-webhook
#   labels:
#     app.kubernetes.io/name: windows-overcommit-webhook
#     app.kubernetes.io/instance: windows-overcommit-webhook
#     app.kubernetes.io/component: windows-overcommit-webhook
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: windows-overcommit-webhook
  namespace: windows-overcommit-webhook
  labels:
    app.kubernetes.io/name: windows-overcommit-webhook
    app.kubernetes.io/instance: windows-overcommit-webhook
    app.kubernetes.io/component: windows-overcommit-webhook
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: windows-overcommit-webhook
  labels:
    app.kubernetes.io/name: windows-overcommit-webhook
    app.kubernetes.io/instance: windows-overcommit-webhook
    app.kubernetes.io/component: windows-overcommit-webhook
rules:
  - apiGroups:
      - ""
    resources: 
      - "nodes"
    verbs: 
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - "kubevirt.io"
    verbs: 
      - "get"
      - "list"
      - "watch"
    resources:
      - "virtualmachines"
      - "virtualmachineinstances"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: windows-overcommit-webhook
  labels:
    app.kubernetes.io/name: windows-overcommit-webhook
    app.kubernetes.io/instance: windows-overcommit-webhook
    app.kubernetes.io/component: windows-overcommit-webhook
subjects:
  - kind: ServiceAccount
    name: windows-overcommit-webhook
    namespace: windows-overcommit-webhook
roleRef:
  kind: ClusterRole
  name: windows-overcommit-webhook
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: windows-overcommit-webhook
  namespace: windows-overcommit-webhook
  labels:
    app.kubernetes.io/name: windows-overcommit-webhook
    app.kubernetes.io/instance: windows-overcommit-webhook
    app.kubernetes.io/component: windows-overcommit-webhook
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app.kubernetes.io/name: windows-overcommit-webhook
    app.kubernetes.io/instance: windows-overcommit-webhook
    app.kubernetes.io/component: windows-overcommit-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: windows-overcommit-webhook
  namespace: windows-overcommit-webhook
  labels:
    app.kubernetes.io/name: windows-overcommit-webhook
    app.kubernetes.io/instance: windows-overcommit-webhook
    app.kubernetes.io/component: windows-overcommit-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: windows-overcommit-webhook
      app.kubernetes.io/instance: windows-overcommit-webhook
      app.kubernetes.io/component: windows-overcommit-webhook
  template:
    metadata:
      labels:
        app.kubernetes.io/name: windows-overcommit-webhook
        app.kubernetes.io/instance: windows-overcommit-webhook
        app.kubernetes.io/component: windows-overcommit-webhook
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - windows-overcommit-webhook
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: windows-overcommit-webhook
      containers:
        - name: webhook
          image: quay.io/mobb/windows-overcommit-webhook:latest
          imagePullPolicy: Always
          env:
            - name: "WEBHOOK_NODE_LABEL_KEY"
              value: "windows"
            - name: "WEBHOOK_NODE_LABEL_VALUES"
              value: "true"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - "ALL"
            runAsNonRoot: true
            runAsUser: 1001
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: "25m"
              memory: "32Mi"
            limits:
              cpu: "50m"
              memory: "64Mi"
          volumeMounts:
            - name: windows-overcommit-webhook
              mountPath: "/ssl_certs"
              readOnly: true
      volumes:
        - name: windows-overcommit-webhook
          secret:
            secretName: webhook-certs
            defaultMode: 0440
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: windows-overcommit-webhook
  labels:
    app.kubernetes.io/name: windows-overcommit-webhook
    app.kubernetes.io/instance: windows-overcommit-webhook
    app.kubernetes.io/component: windows-overcommit-webhook
webhooks:
  - name: windows-overcommit-webhook.mobb.redhat.com
    rules:
      - apiGroups:
          - "kubevirt.io"
        apiVersions:
          - "v1"
        operations:
          - CREATE
          # TODO: add update operation
          # - UPDATE
        resources:
          - "virtualmachines"
          - "virtualmachineinstances"
    admissionReviewVersions:
      - "v1"
    matchPolicy: Equivalent
    timeoutSeconds: 10
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        name: windows-overcommit-webhook
        namespace: windows-overcommit-webhook
        path: /validate
        port: 443
